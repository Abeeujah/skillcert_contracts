name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libdbus-1-dev pkg-config
    
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Cache Soroban CLI
      uses: actions/cache@v3
      with:
        path: ~/.cargo/bin/soroban
        key: ${{ runner.os }}-soroban-cli-23.1.3
    
    - name: Install Soroban CLI
      run: |
        if ! command -v soroban &> /dev/null; then
          cargo install --locked soroban-cli --version 23.1.3
        fi
    
    - name: Check code formatting
      run: cargo fmt --all -- --check
    
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Build contracts
      run: cargo build --release
    
    - name: Run tests
      run: cargo test --all
    
    - name: Build optimized contracts
      run: |
        for contract in contracts/*/; do
          if [ -f "$contract/Cargo.toml" ]; then
            echo "Building optimized contract in $contract"
            cd "$contract"
            soroban contract build --out-dir ../../target/wasm32-unknown-unknown/release/
            cd ../..
          fi
        done
        
        # Build contracts in subdirectories
        for contract in contracts/course/*/; do
          if [ -f "$contract/Cargo.toml" ]; then
            echo "Building optimized contract in $contract"
            cd "$contract"
            soroban contract build --out-dir ../../../target/wasm32-unknown-unknown/release/
            cd ../../..
          fi
        done